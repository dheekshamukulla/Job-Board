// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum AuthProvider {
  EMAIL
  GOOGLE
  APPLE
}

model User {
  id           Int          @id @default(autoincrement())
  email        String       @unique
  password     String?      // Optional because OAuth users won't have a password
  name         String
  isAdmin      Boolean      @default(false)
  authProvider AuthProvider @default(EMAIL)
  avatar       String?      // Profile picture URL
  jobs         Job[]        @relation("UserJobs")
  applications JobApplication[]
  createdAt    DateTime     @default(now())
  updatedAt    DateTime     @updatedAt
}

model Job {
  id            Int             @id @default(autoincrement())
  name          String         // Job title
  company       String
  description   String         @db.Text
  location      String
  type          String         // TECH, EDUCATION, TRADE, MARKETING
  salary        String
  logo          String?        // Company logo URL
  isApproved    Boolean        @default(false)
  userId        Int            // Foreign key for User
  user          User           @relation("UserJobs", fields: [userId], references: [id], onDelete: Cascade)
  applications  JobApplication[]
  postDate      DateTime       @default(now())
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
}

model JobApplication {
  id          Int      @id @default(autoincrement())
  job         Job      @relation(fields: [jobId], references: [id], onDelete: Cascade)
  jobId       Int
  user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId      Int
  name        String
  email       String
  phone       String
  resumeUrl   String?
  comments    String?  @db.Text
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@index([jobId])
  @@index([userId])
}
